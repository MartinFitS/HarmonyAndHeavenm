
<!DOCTYPE html>
<html lang="es">
<head>
    <link rel="stylesheet" href="/css/renderPunto.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    
<header>
    <a class="redirecttext" href="/login/user/master/view/">H&H</a>
    <div class="leftHeaderside">
        <a href="/p-v/ventas"><h4>Ventas</h4></a>
    </div>
</header>

<div class="mainPv">
    <div class="leftSidePunto">
        <div class="listProductsPunto">
            {{#each products}}
                <div class="productSellCard">
                    <img src={{foto}} alt="">
                    <h1>{{modelo}}</h1>
                    <h2>{{precioPublico}}$</h2>
                    <h3>{{unidades}} unidades</h3>
                    <button onclick="add('{{modelo}}', {{precioPublico}}, {{unidades}}, {{id}})">Add</button>
                    <!-- Agregamos el ID del producto como un parámetro en la función "add" -->
                </div>
            {{/each}}
        </div>
    </div>
    <div class="checkProducts">
        <div class="allProducts"></div>
        <div class="totalPrice">
            <div class="pricefinal">
                <h2>Total</h2>
                <h3>0$</h3>
            </div>
        </div>
        <div class="btn-check">
            <button onclick="checkout()">Check Out</button>
        </div>
    </div>
</div>
<div id="custom-modal" class="modalHidden">
    <div class="modal-content">
        <p>¿Estás seguro de realizar la venta?</p>
        <button id="modalYesButton" onclick="modalSelected()">Sí</button>
        <button class="cancelButton" onclick="ocultarModal()">No</button>
    </div>
</div>

<div id="custom-modal_succes" class="modalSucces">
    <div class="modal-content-succes">
        <p>La venta se realizo con exito!</p>
        <button id="aceptBtn">Aceptar</button>
    </div>
</div>
<script>
    let selectedProducts = {};
    let totalPrice = 0;

    function add(modelo, precioPublico, unidades, productId) {
        if (selectedProducts[productId]) {
            if (selectedProducts[productId].unidades + 1 <= unidades) {
                selectedProducts[productId].unidades++;
                console.log(selectedProducts[productId].unidades);
            } else {
                alert('No hay suficientes unidades disponibles en stock para ' + modelo);
            }
        } else {
            selectedProducts[productId] = {
                modelo,
                precioPublico,
                unidades: 1
            };
        }

        console.log('selectedProducts:', selectedProducts);
        updateAllProductsList();
        calculateTotalPrice();
    }

    function removeProduct(productId) {
        delete selectedProducts[productId];
        updateAllProductsList();
        calculateTotalPrice();
    }

    function updateAllProductsList() {
    const allProductsDiv = document.querySelector('.allProducts');
    allProductsDiv.innerHTML = '';

    for (const productId in selectedProducts) {
        const product = selectedProducts[productId];
        const productInfo = document.createElement('div');
        productInfo.classList.add('product-info');
        productInfo.innerHTML = `
            <p class="product-name">${product.modelo} - ${product.precioPublico}$ (${product.unidades}x)</p>
            <button class="deleteProductList" onclick="removeProduct(${productId})">Eliminar</button>
        `;
        allProductsDiv.appendChild(productInfo);
    }
}

    function calculateTotalPrice() {
        totalPrice = Object.values(selectedProducts).reduce((total, product) => total + product.precioPublico * product.unidades, 0);
        const pricefinal = document.querySelector('.pricefinal');
        pricefinal.querySelector('h3').textContent = totalPrice + '$';
    }

    function checkout() {
        mostrarModal()
        console.log(selectedProducts);
        if (Object.keys(selectedProducts).length === 0) {
            alert('No hay productos seleccionados.');
            return;
        }

        let totalPrice = 0;
        for (const productId in selectedProducts) {
            const product = selectedProducts[productId];
            totalPrice += product.precioPublico * product.unidades;
        }

        document.getElementById('modalYesButton').onclick = function () {
        if (modalSelected()) {
            // Continuar con la venta
            ocultarModal();
            confirmarVenta();
            mostrarModalSucces()
            document.getElementById("aceptBtn").onclick = function () {
                if(aceptModal()){
                    console.log("hola")
                ocultarModalSucces()
                window.location.href = '/p-v';
                }
            }
           
            
        } else {
            // Mostrar un mensaje si la venta es cancelada
            alert('Venta cancelada. No se ha realizado ninguna venta.');
        }
        };
    }

    function confirmarVenta() {
    // Continuación del código de checkout()

    const requestData = {
        selectedProducts: selectedProducts,
        total: totalPrice,
    };

    const requestDataJSON = JSON.stringify(requestData);

    fetch('/guardar-venta', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: requestDataJSON,
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Mostrar mensaje de venta exitosa

            // Puedes realizar otras acciones aquí, como borrar la lista de productos seleccionados, etc.
        } else {
            // Mostrar mensaje de error en caso de fallo en la venta
            alert('Error al guardar la venta: ' + data.message);
        }
    })
    .catch(error => {
        // Mostrar mensaje de error en caso de fallo en la solicitud
        console.error('Error en la solicitud: ' + error);
    });
}

    function modalSelected (){
        return true;
    }

    function aceptModal (){

            return true;
        
    }

    function mostrarModal() {
        // Cambia la clase de modalHidden a una clase que haga visible el modal
        document.getElementById('custom-modal').classList.remove('modalHidden');
    }

    function ocultarModal() {
        // Vuelve a aplicar la clase modalHidden para ocultar el modal
        document.getElementById('custom-modal').classList.add('modalHidden');
    }


    function mostrarModalSucces() {
        document.getElementById('custom-modal_succes').classList.remove('modalSucces')
    }
    
    function ocultarModalSucces() {
        document.getElementById('custom-modal_succes').classList.add('modalSucces')
    }
</script>
</body>
</html>
